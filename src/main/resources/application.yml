spring:
  application:
    name: lms-backend
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:postgresql://${DB_URL}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  cache:
    type: redis
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}   # realm bilgisi
          jwk-set-uri: ${JWT_ISSUER_URI}/protocol/openid-connect/certs
jwt:
  auth:
    converter:
      resource-id: ${CLIENT_ID}   # client bilgisi
      principle-attribute: ${PRINCIPLE_ATTRIBUTE}

keycloak:
  client-id: ${CLIENT_ID}
  client-secret: ${CLIENT_SECRET}
  username: ${IDM_USERNAME}
  password: ${IDM_PASSWORD}
  realm: ${REALM}
  auth-server-url: ${ADMIN_AUTH_URL}
  token:
    url: ${JWT_ISSUER_URI}/protocol/openid-connect/token

server:
  port: 9999
logging:
  level:
    com.keycloak: DEBUG
